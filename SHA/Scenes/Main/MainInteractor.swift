//
//  MainInteractor.swift
//  SHA
//
//  Created by Ilyá Belsky on 4/25/18.
//  Copyright (c) 2018 Ilyá Belsky. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


protocol MainBusinessLogic {
    func fetchRecord(request: Main.FetchRecord.Request)
    func incrementFull(request: Main.IncrementFull.Request)
}

protocol MainDataStore {
    var records: [Record] { get }
    var currentRecord: Record! { get }
}

class MainInteractor: MainBusinessLogic, MainDataStore {
    var records: [Record] = [] {
        didSet {
            currentRecord = Record()
        }
    }
    
    var currentRecord: Record!
    
    var presenter: MainPresentationLogic?
    var worker = RecordsWorker(recordsStore: RecordsMemStore())
    
    // MARK: - Records
    
    func fetchRecord(request: Main.FetchRecord.Request) {
        worker.fetchRecords { records in
            self.records = records
            let response = Main.FetchRecord.Response(record: self.currentRecord)
            self.presenter?.presentRecord(response: response)
        }
    }

    // MARK: - Counters
    
    func incrementFull(request: Main.IncrementFull.Request) {
        currentRecord.full += 1
        let response = Main.FetchRecord.Response(record: currentRecord)
        presenter?.presentRecord(response: response)
    }
}
