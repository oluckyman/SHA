//
//  MainInteractor.swift
//  SHA
//
//  Created by Ilyá Belsky on 4/25/18.
//  Copyright (c) 2018 Ilyá Belsky. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit


protocol MainBusinessLogic {
    func fetchRecord(request: Main.FetchRecord.Request)
    func increment(request: Main.Increment.Request)
//    func resetFull(request: Main.ResetFull.Request)
    func navigate(request: Main.Navigate.Request)
}

protocol MainDataStore {
    var currentDate: RecordDate { get }
}

class MainInteractor: MainBusinessLogic, MainDataStore {
    var presenter: MainPresentationLogic?
    var worker = RecordsWorker(recordsStore: RecordsMemStore())
    
    var currentDate = RecordDate()
    
    // MARK: - Records
    
    func fetchRecord(request: Main.FetchRecord.Request) {
        worker.fetchRecord(for: currentDate, completionHandler: { record in
            let response = Main.FetchRecord.Response(record: record)
            self.presenter?.presentRecord(response: response)
        })
    }

    // MARK: - Counters
    
    func increment(request: Main.Increment.Request) {
        worker.increment(counter: request.counter, for: currentDate) { record in
            let response = Main.FetchRecord.Response(record: record)
            self.presenter?.presentRecord(response: response)
        }
    }
    
    func resetFull(request: Main.ResetFull.Request) {
//        currentRecord.full = 0
//        let response = Main.FetchRecord.Response(record: currentRecord)
//        presenter?.presentRecord(response: response)
    }
    
    // MARK: - Navigation
    
    func navigate(request: Main.Navigate.Request) {
        switch request.direction {
        case .next:
            currentDate = currentDate.tomorrow()
        case .prev:
            currentDate = currentDate.yesterday()
        }
        fetchRecord(request: Main.FetchRecord.Request())
    }
}
